#!/usr/bin/env node

/**
 * Script para obtener la clave correcta de Redsys
 * Te gu√≠a paso a paso para obtener la clave SHA256 correcta
 */

require('dotenv').config({ path: '.env.local' });
const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üîë OBTENER CLAVE CORRECTA DE REDSYS');
console.log('====================================');

// Configuraci√≥n actual
const config = {
  merchantCode: process.env.REDSYS_MERCHANT_CODE || '367529286',
  terminal: process.env.REDSYS_TERMINAL || '1',
  environment: process.env.REDSYS_ENVIRONMENT || 'https://sis-t.redsys.es:25443/sis/realizarPago'
};

const isTestEnvironment = config.environment.includes('sis-t.redsys.es');

console.log('üìã CONFIGURACI√ìN ACTUAL:');
console.log('=========================');
console.log(`   Merchant Code: ${config.merchantCode}`);
console.log(`   Terminal: ${config.terminal}`);
console.log(`   Entorno: ${isTestEnvironment ? 'PRUEBAS' : 'PRODUCCI√ìN'}`);
console.log(`   URL: ${config.environment}`);

console.log('\nüéØ PASOS PARA OBTENER LA CLAVE CORRECTA:');
console.log('==========================================');

console.log('\n1Ô∏è‚É£  ACCEDE A LA WEB DE CANALES:');
console.log('===============================');
if (isTestEnvironment) {
  console.log('   üåê URL: https://canalespago.redsys.es/');
  console.log('   üìù Entorno: PRUEBAS');
} else {
  console.log('   üåê URL: https://canales.redsys.es/');
  console.log('   üìù Entorno: PRODUCCI√ìN');
}

console.log('\n2Ô∏è‚É£  INICIA SESI√ìN:');
console.log('==================');
console.log('   üîê Usa tus credenciales de comercio de Redsys');
console.log('   üìß Usuario y contrase√±a de tu cuenta de comercio');

console.log('\n3Ô∏è‚É£  NAVEGA A CONFIGURACI√ìN:');
console.log('===========================');
console.log('   üìç Busca "Configuraci√≥n" o "Par√°metros"');
console.log('   üè™ Selecciona tu terminal espec√≠fico');
console.log(`   üî¢ Terminal: ${config.terminal}`);

console.log('\n4Ô∏è‚É£  OBT√âN LA CLAVE SHA256:');
console.log('==========================');
console.log('   üîë Busca "Clave SHA256" o "Clave de firma"');
console.log('   üìã Copia la clave completa');
console.log('   ‚ö†Ô∏è  Aseg√∫rate de que sea para:');
console.log(`      - Merchant Code: ${config.merchantCode}`);
console.log(`      - Terminal: ${config.terminal}`);
console.log(`      - Entorno: ${isTestEnvironment ? 'PRUEBAS' : 'PRODUCCI√ìN'}`);

console.log('\n5Ô∏è‚É£  VERIFICA EL FORMATO:');
console.log('========================');
console.log('   üîç La clave debe estar en formato hexadecimal');
console.log('   üìè Ejemplo: b2aec78eb50e05f2a60b9efa20b82c903e6cad4f3bd2027b');
console.log('   ‚ùå NO debe tener espacios ni caracteres especiales');

// Funci√≥n para validar formato hexadecimal
function isValidHex(str) {
  return /^[0-9a-fA-F]+$/.test(str);
}

// Funci√≥n para actualizar el archivo .env.local
function updateEnvFile(newKey) {
  try {
    const envPath = '.env.local';
    let envContent = '';
    
    if (fs.existsSync(envPath)) {
      envContent = fs.readFileSync(envPath, 'utf8');
    }
    
    // Buscar y reemplazar la l√≠nea REDSYS_SECRET_KEY
    const lines = envContent.split('\n');
    let keyUpdated = false;
    
    for (let i = 0; i < lines.length; i++) {
      if (lines[i].startsWith('REDSYS_SECRET_KEY=')) {
        lines[i] = `REDSYS_SECRET_KEY=${newKey}`;
        keyUpdated = true;
        break;
      }
    }
    
    // Si no se encontr√≥ la l√≠nea, a√±adirla
    if (!keyUpdated) {
      lines.push(`REDSYS_SECRET_KEY=${newKey}`);
    }
    
    // Escribir el archivo actualizado
    fs.writeFileSync(envPath, lines.join('\n'));
    console.log('   ‚úÖ Archivo .env.local actualizado correctamente');
    return true;
  } catch (error) {
    console.error('   ‚ùå Error actualizando archivo:', error.message);
    return false;
  }
}

// Funci√≥n para solicitar la nueva clave
function askForNewKey() {
  console.log('\nüîë INGRESA LA NUEVA CLAVE:');
  console.log('===========================');
  console.log('   üìù Pega aqu√≠ la clave SHA256 que obtuviste de Redsys:');
  
  rl.question('   Clave: ', (input) => {
    const key = input.trim();
    
    if (!key) {
      console.log('   ‚ùå No se ingres√≥ ninguna clave');
      rl.close();
      return;
    }
    
    console.log('\nüîç VALIDANDO CLAVE:');
    console.log('===================');
    console.log(`   Longitud: ${key.length} caracteres`);
    console.log(`   Formato hexadecimal: ${isValidHex(key) ? '‚úÖ S√ç' : '‚ùå NO'}`);
    
    if (!isValidHex(key)) {
      console.log('   ‚ùå La clave no est√° en formato hexadecimal v√°lido');
      console.log('   üí° Aseg√∫rate de copiar solo los caracteres hexadecimales (0-9, a-f, A-F)');
      rl.close();
      return;
    }
    
    console.log('   ‚úÖ Clave v√°lida');
    
    console.log('\nüìù ACTUALIZANDO CONFIGURACI√ìN:');
    console.log('===============================');
    
    if (updateEnvFile(key)) {
      console.log('\nüéâ ¬°CONFIGURACI√ìN ACTUALIZADA!');
      console.log('==============================');
      console.log('   ‚úÖ Nueva clave guardada en .env.local');
      console.log('   üîÑ Reinicia el servidor de desarrollo');
      console.log('   üß™ Prueba una nueva reserva');
      
      console.log('\nüìã RESUMEN DE CAMBIOS:');
      console.log('=======================');
      console.log(`   Merchant Code: ${config.merchantCode}`);
      console.log(`   Terminal: ${config.terminal}`);
      console.log(`   Entorno: ${isTestEnvironment ? 'PRUEBAS' : 'PRODUCCI√ìN'}`);
      console.log(`   Nueva clave: ${key.substring(0, 10)}...`);
      
      console.log('\nüöÄ PR√ìXIMOS PASOS:');
      console.log('==================');
      console.log('1. üîÑ Reinicia el servidor de desarrollo');
      console.log('2. üß™ Prueba una nueva reserva');
      console.log('3. ‚úÖ Verifica que el pago funcione correctamente');
      console.log('4. üéØ El error SIS0042 deber√≠a estar resuelto');
      
    } else {
      console.log('   ‚ùå No se pudo actualizar la configuraci√≥n');
      console.log('   üí° Actualiza manualmente el archivo .env.local');
    }
    
    rl.close();
  });
}

// Preguntar si quiere continuar
console.log('\n‚ùì ¬øQuieres continuar e ingresar la nueva clave?');
console.log('================================================');
console.log('   üí° Aseg√∫rate de tener la clave SHA256 de Redsys lista');
console.log('   üìã Puedes copiarla de la web de Canales de Redsys');

rl.question('   ¬øContinuar? (s/n): ', (answer) => {
  if (answer.toLowerCase() === 's' || answer.toLowerCase() === 'si' || answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
    askForNewKey();
  } else {
    console.log('\nüìù INSTRUCCIONES MANUALES:');
    console.log('===========================');
    console.log('1. Obt√©n la clave SHA256 de la web de Canales de Redsys');
    console.log('2. Abre el archivo .env.local');
    console.log('3. Actualiza la l√≠nea REDSYS_SECRET_KEY=tu_clave_aqui');
    console.log('4. Guarda el archivo');
    console.log('5. Reinicia el servidor de desarrollo');
    console.log('6. Prueba una nueva reserva');
    
    rl.close();
  }
}); 