#!/usr/bin/env node

/**
 * Script para actualizar autom√°ticamente la clave secreta de Redsys en .env.local
 * Convierte de Base64 a Hexadecimal para solucionar el error SIS0042
 */

require('dotenv').config({ path: '.env.local' });
const fs = require('fs');
const path = require('path');

console.log('üîß ACTUALIZACI√ìN AUTOM√ÅTICA DE CLAVE REDSYS');
console.log('==========================================');

// Obtener la clave actual
const currentSecretKey = process.env.REDSYS_SECRET_KEY;

if (!currentSecretKey) {
  console.error('‚ùå ERROR: REDSYS_SECRET_KEY no est√° configurada');
  console.log('\nüìù SOLUCI√ìN:');
  console.log('1. A√±ade tu clave secreta al archivo .env.local');
  console.log('2. Ejecuta este script nuevamente');
  process.exit(1);
}

console.log('üìã CLAVE ACTUAL:');
console.log(`   Valor: ${currentSecretKey}`);
console.log(`   Longitud: ${currentSecretKey.length} caracteres`);

try {
  // Convertir de Base64 a Hexadecimal
  const base64Buffer = Buffer.from(currentSecretKey, 'base64');
  const hexKey = base64Buffer.toString('hex');
  
  console.log('\nüîë CLAVE CONVERTIDA:');
  console.log(`   Valor: ${hexKey}`);
  console.log(`   Longitud: ${hexKey.length} caracteres`);
  
  // Leer el archivo .env.local
  const envPath = path.join(process.cwd(), '.env.local');
  let envContent = '';
  
  if (fs.existsSync(envPath)) {
    envContent = fs.readFileSync(envPath, 'utf8');
    console.log('\nüìÅ Archivo .env.local encontrado');
  } else {
    console.log('\nüìÅ Creando nuevo archivo .env.local');
  }
  
  // Buscar y reemplazar la l√≠nea REDSYS_SECRET_KEY
  const newLine = `REDSYS_SECRET_KEY=${hexKey}`;
  
  if (envContent.includes('REDSYS_SECRET_KEY=')) {
    // Reemplazar la l√≠nea existente
    envContent = envContent.replace(
      /REDSYS_SECRET_KEY=.*/g,
      newLine
    );
    console.log('‚úÖ L√≠nea REDSYS_SECRET_KEY actualizada');
  } else {
    // A√±adir la nueva l√≠nea
    envContent += `\n${newLine}`;
    console.log('‚úÖ Nueva l√≠nea REDSYS_SECRET_KEY a√±adida');
  }
  
  // Escribir el archivo actualizado
  fs.writeFileSync(envPath, envContent);
  
  console.log('\n‚úÖ ARCHIVO .env.local ACTUALIZADO');
  console.log('==================================');
  console.log(`   Archivo: ${envPath}`);
  console.log(`   Nueva clave: ${hexKey}`);
  
  // Verificar que la actualizaci√≥n fue exitosa
  const updatedContent = fs.readFileSync(envPath, 'utf8');
  if (updatedContent.includes(hexKey)) {
    console.log('‚úÖ Verificaci√≥n exitosa: clave actualizada correctamente');
  } else {
    console.error('‚ùå ERROR: La clave no se actualiz√≥ correctamente');
    process.exit(1);
  }
  
  console.log('\nüéØ PR√ìXIMOS PASOS:');
  console.log('==================');
  console.log('1. ‚úÖ Clave actualizada autom√°ticamente');
  console.log('2. üîÑ Reinicia el servidor de desarrollo');
  console.log('3. üß™ Prueba una nueva reserva');
  console.log('4. ‚úÖ El error SIS0042 deber√≠a estar resuelto');
  
  console.log('\nüìù CONFIGURACI√ìN ACTUALIZADA:');
  console.log('=============================');
  console.log(`REDSYS_SECRET_KEY=${hexKey}`);
  
} catch (error) {
  console.error('‚ùå ERROR durante la actualizaci√≥n:', error.message);
  console.log('\nüìù SOLUCI√ìN MANUAL:');
  console.log('1. Abre tu archivo .env.local');
  console.log('2. Cambia la l√≠nea REDSYS_SECRET_KEY por:');
  console.log(`   REDSYS_SECRET_KEY=${Buffer.from(currentSecretKey, 'base64').toString('hex')}`);
  console.log('3. Guarda el archivo');
  console.log('4. Reinicia el servidor');
}

console.log('\n‚úÖ Proceso completado'); 