-- Script de prueba CORREGIDO para el sistema simple de precios por edad
-- Ejecutar en Supabase SQL Editor DESPU√âS de check-existing-categories.sql
-- IMPORTANTE: Reemplazar "CATEGORIA_REAL" y "SUBCATEGORIA_REAL" con valores reales

-- =====================================================
-- 1. OBTENER CATEGOR√çAS REALES PARA LA PRUEBA
-- =====================================================

-- Obtener la primera categor√≠a disponible
DO $$
DECLARE
    primera_categoria_id TEXT;
    primera_subcategoria_id TEXT;
BEGIN
    -- Obtener primera categor√≠a
    SELECT id INTO primera_categoria_id 
    FROM categories 
    LIMIT 1;
    
    -- Obtener primera subcategor√≠a de esa categor√≠a
    SELECT id INTO primera_subcategoria_id 
    FROM subcategories 
    WHERE category_id = primera_categoria_id
    LIMIT 1;
    
    RAISE NOTICE '‚úÖ Categor√≠a seleccionada: %', primera_categoria_id;
    RAISE NOTICE '‚úÖ Subcategor√≠a seleccionada: %', primera_subcategoria_id;
END $$;

-- =====================================================
-- 2. PROBAR CREACI√ìN DE SERVICIO CON CATEGOR√çAS REALES
-- =====================================================

-- Probar crear un servicio con precios por edad
DO $$
DECLARE
    new_service_id UUID;
    primera_categoria_id TEXT;
    primera_subcategoria_id TEXT;
BEGIN
    -- Obtener categor√≠as reales
    SELECT id INTO primera_categoria_id 
    FROM categories 
    LIMIT 1;
    
    SELECT id INTO primera_subcategoria_id 
    FROM subcategories 
    WHERE category_id = primera_categoria_id
    LIMIT 1;
    
    -- Crear servicio con categor√≠as reales
    SELECT create_service_simple(
        jsonb_build_object(
            'title', 'Tour de Prueba - Precios por Edad',
            'description', 'Servicio de prueba para verificar el sistema simple de precios por edad',
            'category_id', primera_categoria_id,
            'subcategory_id', primera_subcategoria_id,
            'price', 50.00,
            'duration', 120,
            'location', 'Tenerife',
            'precio_ninos', 25.00,
            'edad_maxima_ninos', 12
        )
    ) INTO new_service_id;
    
    RAISE NOTICE '‚úÖ Servicio creado exitosamente con ID: %', new_service_id;
    RAISE NOTICE '‚úÖ Precio para ni√±os: 25.00‚Ç¨, Edad m√°xima: 12 a√±os';
    RAISE NOTICE '‚úÖ Categor√≠a: %, Subcategor√≠a: %', primera_categoria_id, primera_subcategoria_id;
END $$;

-- =====================================================
-- 3. VERIFICAR SERVICIO CREADO
-- =====================================================

-- Verificar que el servicio se cre√≥ con los campos correctos
SELECT 
    id,
    title,
    price,
    precio_ninos,
    edad_maxima_ninos,
    category_id,
    subcategory_id,
    created_at
FROM services 
WHERE title = 'Tour de Prueba - Precios por Edad'
ORDER BY created_at DESC
LIMIT 1;

-- =====================================================
-- 4. PROBAR ACTUALIZACI√ìN
-- =====================================================

-- Probar actualizar el servicio
DO $$
DECLARE
    test_service_id UUID;
    update_result BOOLEAN;
BEGIN
    -- Obtener el ID del servicio de prueba
    SELECT id INTO test_service_id 
    FROM services 
    WHERE title = 'Tour de Prueba - Precios por Edad'
    ORDER BY created_at DESC
    LIMIT 1;
    
    IF test_service_id IS NOT NULL THEN
        -- Actualizar el servicio
        SELECT update_service_simple(
            test_service_id,
            '{
                "precio_ninos": 30.00,
                "edad_maxima_ninos": 14,
                "price": 55.00
            }'::JSONB
        ) INTO update_result;
        
        RAISE NOTICE '‚úÖ Servicio actualizado exitosamente';
        RAISE NOTICE '‚úÖ Nuevo precio para ni√±os: 30.00‚Ç¨, Nueva edad m√°xima: 14 a√±os';
        RAISE NOTICE '‚úÖ Nuevo precio general: 55.00‚Ç¨';
    ELSE
        RAISE NOTICE '‚ùå No se encontr√≥ el servicio de prueba';
    END IF;
END $$;

-- =====================================================
-- 5. VERIFICAR ACTUALIZACI√ìN
-- =====================================================

-- Verificar que la actualizaci√≥n funcion√≥
SELECT 
    id,
    title,
    price,
    precio_ninos,
    edad_maxima_ninos,
    updated_at
FROM services 
WHERE title = 'Tour de Prueba - Precios por Edad'
ORDER BY updated_at DESC
LIMIT 1;

-- =====================================================
-- 6. PROBAR ELIMINACI√ìN
-- =====================================================

-- Probar eliminar el servicio de prueba
DO $$
DECLARE
    test_service_id UUID;
    delete_result BOOLEAN;
BEGIN
    -- Obtener el ID del servicio de prueba
    SELECT id INTO test_service_id 
    FROM services 
    WHERE title = 'Tour de Prueba - Precios por Edad'
    ORDER BY created_at DESC
    LIMIT 1;
    
    IF test_service_id IS NOT NULL THEN
        -- Eliminar el servicio
        SELECT delete_service_simple(test_service_id) INTO delete_result;
        
        IF delete_result THEN
            RAISE NOTICE '‚úÖ Servicio eliminado exitosamente';
        ELSE
            RAISE NOTICE '‚ùå Error al eliminar el servicio';
        END IF;
    ELSE
        RAISE NOTICE '‚ùå No se encontr√≥ el servicio de prueba';
    END IF;
END $$;

-- =====================================================
-- 7. VERIFICAR ELIMINACI√ìN
-- =====================================================

-- Verificar que el servicio se elimin√≥
SELECT 
    COUNT(*) as servicios_restantes
FROM services 
WHERE title = 'Tour de Prueba - Precios por Edad';

-- =====================================================
-- 8. MENSAJE DE CONFIRMACI√ìN
-- =====================================================

DO $$
BEGIN
    RAISE NOTICE 'üéâ Sistema de precios por edad simple probado exitosamente!';
    RAISE NOTICE '‚úÖ Creaci√≥n de servicios: FUNCIONA';
    RAISE NOTICE '‚úÖ Actualizaci√≥n de servicios: FUNCIONA';
    RAISE NOTICE '‚úÖ Eliminaci√≥n de servicios: FUNCIONA';
    RAISE NOTICE '‚úÖ Campos precio_ninos y edad_maxima_ninos: FUNCIONAN';
    RAISE NOTICE '‚úÖ Categor√≠as y subcategor√≠as: FUNCIONAN';
    RAISE NOTICE 'üöÄ Frontend listo para usar el sistema simple!';
END $$;
