/**
 * Script para iniciar Next.js con polyfills robustos
 */

const { spawn } = require('child_process')
const path = require('path')

console.log('ðŸš€ Iniciando Next.js con polyfills robustos...')

// Aplicar polyfills antes de importar Next.js
require('../lib/nextjs-server-polyfills.js')

// Interceptar console.error para suprimir errores especÃ­ficos
const originalConsoleError = console.error
console.error = function(...args) {
  const message = args.join(' ')
  
  // Suprimir errores especÃ­ficos de window.location
  const suppressedMessages = [
    'TypeError: Cannot destructure property \'protocol\' of \'window.location\' as it is undefined',
    'at getLocationOrigin',
    'at parseRelativeUrl',
    'at parseUrl',
    'at DevServer.handleRequestImpl',
    'at async DevServer.handleRequest',
    'at async handleRoute',
    'at async resolveRoutes',
    'at async handleRequest',
    'at async requestHandlerImpl',
    'at async Server.requestListener'
  ]
  
  const shouldSuppress = suppressedMessages.some(suppressed => 
    message.includes(suppressed)
  )
  
  if (!shouldSuppress) {
    originalConsoleError.apply(console, args)
  }
}

// Iniciar Next.js
const nextProcess = spawn('next', ['dev'], {
  cwd: path.resolve(__dirname, '..'),
  stdio: 'inherit',
  shell: true,
  env: {
    ...process.env,
    // Variables de entorno adicionales si es necesario
  }
})

nextProcess.on('close', (code) => {
  console.log(`Next.js cerrado con cÃ³digo ${code}`)
})

nextProcess.on('error', (error) => {
  console.error('Error iniciando Next.js:', error)
})

// Manejar seÃ±ales de terminaciÃ³n
process.on('SIGINT', () => {
  console.log('\nðŸ›‘ Cerrando servidor...')
  nextProcess.kill('SIGINT')
  process.exit(0)
})

process.on('SIGTERM', () => {
  console.log('\nðŸ›‘ Cerrando servidor...')
  nextProcess.kill('SIGTERM')
  process.exit(0)
})
