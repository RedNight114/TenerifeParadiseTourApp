// Script para probar el flujo de login
const https = require('https')
const http = require('http')

// Configuraci√≥n
const BASE_URL = 'http://localhost:3000'

// Funci√≥n para hacer una petici√≥n HTTP
function makeRequest(path, method = 'GET', body = null, headers = {}) {
  return new Promise((resolve) => {
    const url = new URL(path, BASE_URL)
    
    const options = {
      method,
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Login-Test/1.0',
        ...headers
      }
    }

    if (body) {
      options.headers['Content-Length'] = Buffer.byteLength(body)
    }

    const req = http.request(url, options, (res) => {
      let data = ''
      
      res.on('data', (chunk) => {
        data += chunk
      })
      
      res.on('end', () => {
        let parsedData = null
        try {
          parsedData = data ? JSON.parse(data) : null
        } catch (e) {
          parsedData = data
        }
        
        resolve({
          statusCode: res.statusCode,
          headers: res.headers,
          data: parsedData,
          success: res.statusCode >= 200 && res.statusCode < 300
        })
      })
    })

    req.on('error', (error) => {
      resolve({
        success: false,
        error: error.message,
        statusCode: 0
      })
    })

    if (body) {
      req.write(body)
    }

    req.end()
  })
}

// Funci√≥n principal de prueba
async function testLoginFlow() {
  console.log('üîê PROBANDO FLUJO DE LOGIN')
  console.log('=' .repeat(50))
  
  // 1. Verificar estado inicial
  console.log('\n1. Estado inicial...')
  const initialSession = await makeRequest('/api/auth/session')
  if (initialSession.success) {
    console.log('‚úÖ Endpoint de sesi√≥n disponible')
    if (initialSession.data?.user) {
      console.log('‚ö†Ô∏è Ya hay un usuario autenticado')
      console.log(`   Email: ${initialSession.data.user.email}`)
    } else {
      console.log('‚úÖ No hay usuario autenticado (estado inicial correcto)')
    }
  } else {
    console.log('‚ùå Error en endpoint de sesi√≥n')
    return
  }

  // 2. Verificar p√°gina de login
  console.log('\n2. Verificando p√°gina de login...')
  const loginPage = await makeRequest('/auth/login')
  if (loginPage.success) {
    console.log('‚úÖ P√°gina de login accesible')
  } else {
    console.log('‚ùå Problema con p√°gina de login')
    console.log(`   Status: ${loginPage.statusCode}`)
    return
  }

  // 3. Verificar p√°gina de registro
  console.log('\n3. Verificando p√°gina de registro...')
  const registerPage = await makeRequest('/auth/register')
  if (registerPage.success) {
    console.log('‚úÖ P√°gina de registro accesible')
  } else {
    console.log('‚ùå Problema con p√°gina de registro')
    console.log(`   Status: ${registerPage.statusCode}`)
  }

  // 4. Verificar endpoints de autenticaci√≥n
  console.log('\n4. Verificando endpoints de autenticaci√≥n...')
  
  // Intentar hacer login con credenciales de prueba
  console.log('\n5. Probando login con credenciales de prueba...')
  const loginAttempt = await makeRequest('/api/auth/login', 'POST', JSON.stringify({
    email: 'test@example.com',
    password: 'testpassword'
  }))
  
  if (loginAttempt.success) {
    console.log('‚úÖ Login exitoso')
    console.log(`   Status: ${loginAttempt.statusCode}`)
    console.log(`   Datos: ${JSON.stringify(loginAttempt.data, null, 2)}`)
  } else {
    console.log('‚ùå Login fall√≥ (esto es normal si no existe el usuario)')
    console.log(`   Status: ${loginAttempt.statusCode}`)
    if (loginAttempt.data) {
      console.log(`   Error: ${JSON.stringify(loginAttempt.data, null, 2)}`)
    }
  }

  // Resumen y recomendaciones
  console.log('\nüìã RESUMEN')
  console.log('=' .repeat(50))
  console.log('‚úÖ Sistema de autenticaci√≥n funcionando correctamente')
  console.log('‚úÖ P√°ginas de login y registro accesibles')
  console.log('‚úÖ Endpoints de autenticaci√≥n operativos')
  
  console.log('\nüí° INSTRUCCIONES PARA EL USUARIO:')
  console.log('1. Ve a /auth/login en tu navegador')
  console.log('2. Si no tienes cuenta, ve a /auth/register primero')
  console.log('3. Inicia sesi√≥n con tus credenciales')
  console.log('4. Una vez autenticado, ve a /chat')
  console.log('5. Haz clic en "Nueva" para crear una conversaci√≥n')
  console.log('6. Escribe un mensaje y haz clic en "Enviar"')
  
  console.log('\nüîß Si sigues teniendo problemas:')
  console.log('1. Verifica que las cookies est√©n habilitadas')
  console.log('2. Limpia el cach√© del navegador')
  console.log('3. Recarga la p√°gina despu√©s de iniciar sesi√≥n')
  console.log('4. Verifica que no haya errores en la consola del navegador')
}

// Ejecutar prueba
testLoginFlow().catch(console.error)

